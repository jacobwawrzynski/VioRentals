// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VioRentals.Infrastructure.Data;

#nullable disable

namespace VioRentals.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230703175607_genresAndMoviesData")]
    partial class genresAndMoviesData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("VioRentals.Core.Entities.CustomerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Forename")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSubscribingToNewsletter")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MembershipDetailsFK")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MembershipType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MembershipDetailsFK");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("VioRentals.Core.Entities.GenreEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Family"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Sci-Fi"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Western"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Animation"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Crime"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Documentary"
                        },
                        new
                        {
                            Id = 16,
                            Name = "History"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Music"
                        },
                        new
                        {
                            Id = 18,
                            Name = "War"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Biography"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Musical"
                        });
                });

            modelBuilder.Entity("VioRentals.Core.Entities.MembershipDetailsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte>("DiscountRate")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("DurationInMonths")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<short>("SignUpFee")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("MembershipTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountRate = (byte)0,
                            DurationInMonths = (byte)0,
                            Name = "PayAsYouGo",
                            SignUpFee = (short)0
                        },
                        new
                        {
                            Id = 2,
                            DiscountRate = (byte)10,
                            DurationInMonths = (byte)1,
                            Name = "Monthly",
                            SignUpFee = (short)30
                        },
                        new
                        {
                            Id = 3,
                            DiscountRate = (byte)15,
                            DurationInMonths = (byte)3,
                            Name = "Quarterly",
                            SignUpFee = (short)90
                        },
                        new
                        {
                            Id = 4,
                            DiscountRate = (byte)20,
                            DurationInMonths = (byte)12,
                            Name = "Annual",
                            SignUpFee = (short)300
                        });
                });

            modelBuilder.Entity("VioRentals.Core.Entities.MovieEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GenreFK")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<byte>("NumberAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("NumberInStock")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GenreFK");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateAdded = new DateTime(2023, 7, 3, 19, 56, 7, 484, DateTimeKind.Local).AddTicks(161),
                            GenreFK = 2,
                            Name = "Hangover",
                            NumberAvailable = (byte)5,
                            NumberInStock = (byte)5,
                            ReleaseDate = new DateTime(2009, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            DateAdded = new DateTime(2023, 7, 3, 19, 56, 7, 484, DateTimeKind.Local).AddTicks(168),
                            GenreFK = 1,
                            Name = "Die Hard",
                            NumberAvailable = (byte)5,
                            NumberInStock = (byte)5,
                            ReleaseDate = new DateTime(1988, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            DateAdded = new DateTime(2023, 7, 3, 19, 56, 7, 484, DateTimeKind.Local).AddTicks(173),
                            GenreFK = 2,
                            Name = "The Terminator",
                            NumberAvailable = (byte)5,
                            NumberInStock = (byte)5,
                            ReleaseDate = new DateTime(1984, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            DateAdded = new DateTime(2023, 7, 3, 19, 56, 7, 484, DateTimeKind.Local).AddTicks(177),
                            GenreFK = 12,
                            Name = "Toy Story",
                            NumberAvailable = (byte)5,
                            NumberInStock = (byte)5,
                            ReleaseDate = new DateTime(1995, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            DateAdded = new DateTime(2023, 7, 3, 19, 56, 7, 484, DateTimeKind.Local).AddTicks(181),
                            GenreFK = 4,
                            Name = "Titanic",
                            NumberAvailable = (byte)5,
                            NumberInStock = (byte)5,
                            ReleaseDate = new DateTime(1997, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            DateAdded = new DateTime(2023, 7, 3, 19, 56, 7, 484, DateTimeKind.Local).AddTicks(185),
                            GenreFK = 5,
                            Name = "The Sixth Sense",
                            NumberAvailable = (byte)5,
                            NumberInStock = (byte)5,
                            ReleaseDate = new DateTime(1999, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            DateAdded = new DateTime(2023, 7, 3, 19, 56, 7, 484, DateTimeKind.Local).AddTicks(189),
                            GenreFK = 1,
                            Name = "The Avengers",
                            NumberAvailable = (byte)5,
                            NumberInStock = (byte)5,
                            ReleaseDate = new DateTime(2012, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            DateAdded = new DateTime(2023, 7, 3, 19, 56, 7, 484, DateTimeKind.Local).AddTicks(194),
                            GenreFK = 1,
                            Name = "The Dark Knight",
                            NumberAvailable = (byte)5,
                            NumberInStock = (byte)5,
                            ReleaseDate = new DateTime(2008, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            DateAdded = new DateTime(2023, 7, 3, 19, 56, 7, 484, DateTimeKind.Local).AddTicks(198),
                            GenreFK = 2,
                            Name = "The Lion King",
                            NumberAvailable = (byte)12,
                            NumberInStock = (byte)5,
                            ReleaseDate = new DateTime(1994, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            DateAdded = new DateTime(2023, 7, 3, 19, 56, 7, 484, DateTimeKind.Local).AddTicks(202),
                            GenreFK = 8,
                            Name = "Star Wars",
                            NumberAvailable = (byte)5,
                            NumberInStock = (byte)5,
                            ReleaseDate = new DateTime(1977, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            DateAdded = new DateTime(2023, 7, 3, 19, 56, 7, 484, DateTimeKind.Local).AddTicks(206),
                            GenreFK = 12,
                            Name = "The Incredibles",
                            NumberAvailable = (byte)5,
                            NumberInStock = (byte)5,
                            ReleaseDate = new DateTime(2004, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            DateAdded = new DateTime(2023, 7, 3, 19, 56, 7, 484, DateTimeKind.Local).AddTicks(210),
                            GenreFK = 13,
                            Name = "The Hunger Games",
                            NumberAvailable = (byte)5,
                            NumberInStock = (byte)5,
                            ReleaseDate = new DateTime(2012, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            DateAdded = new DateTime(2023, 7, 3, 19, 56, 7, 484, DateTimeKind.Local).AddTicks(215),
                            GenreFK = 13,
                            Name = "The Hobbit: An Unexpected Journey",
                            NumberAvailable = (byte)5,
                            NumberInStock = (byte)5,
                            ReleaseDate = new DateTime(2012, 12, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            DateAdded = new DateTime(2023, 7, 3, 19, 56, 7, 484, DateTimeKind.Local).AddTicks(219),
                            GenreFK = 6,
                            Name = "The Godfather",
                            NumberAvailable = (byte)5,
                            NumberInStock = (byte)5,
                            ReleaseDate = new DateTime(1972, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            DateAdded = new DateTime(2023, 7, 3, 19, 56, 7, 484, DateTimeKind.Local).AddTicks(223),
                            GenreFK = 8,
                            Name = "Inception",
                            NumberAvailable = (byte)5,
                            NumberInStock = (byte)5,
                            ReleaseDate = new DateTime(2010, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("VioRentals.Core.Entities.RentalEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerFK")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateRented")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateReturned")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieFK")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CustomerFK");

                    b.HasIndex("MovieFK");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("VioRentals.Core.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Forename")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VioRentals.Core.Entities.CustomerEntity", b =>
                {
                    b.HasOne("VioRentals.Core.Entities.MembershipDetailsEntity", "_MembershipDetails")
                        .WithMany("_Customers")
                        .HasForeignKey("MembershipDetailsFK")
                        .IsRequired();

                    b.Navigation("_MembershipDetails");
                });

            modelBuilder.Entity("VioRentals.Core.Entities.MovieEntity", b =>
                {
                    b.HasOne("VioRentals.Core.Entities.GenreEntity", "_Genre")
                        .WithMany("_Movies")
                        .HasForeignKey("GenreFK");

                    b.Navigation("_Genre");
                });

            modelBuilder.Entity("VioRentals.Core.Entities.RentalEntity", b =>
                {
                    b.HasOne("VioRentals.Core.Entities.CustomerEntity", "_Customer")
                        .WithMany("_Rentals")
                        .HasForeignKey("CustomerFK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VioRentals.Core.Entities.MovieEntity", "_Movie")
                        .WithMany("_Rentals")
                        .HasForeignKey("MovieFK")
                        .IsRequired();

                    b.Navigation("_Customer");

                    b.Navigation("_Movie");
                });

            modelBuilder.Entity("VioRentals.Core.Entities.CustomerEntity", b =>
                {
                    b.Navigation("_Rentals");
                });

            modelBuilder.Entity("VioRentals.Core.Entities.GenreEntity", b =>
                {
                    b.Navigation("_Movies");
                });

            modelBuilder.Entity("VioRentals.Core.Entities.MembershipDetailsEntity", b =>
                {
                    b.Navigation("_Customers");
                });

            modelBuilder.Entity("VioRentals.Core.Entities.MovieEntity", b =>
                {
                    b.Navigation("_Rentals");
                });
#pragma warning restore 612, 618
        }
    }
}
