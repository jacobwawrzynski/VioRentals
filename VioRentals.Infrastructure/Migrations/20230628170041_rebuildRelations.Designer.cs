// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VioRentals.Infrastructure.Data;

#nullable disable

namespace VioRentals.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230628170041_rebuildRelations")]
    partial class rebuildRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("VioRentals.Core.Entities.CustomerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Forename")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSubscribingToNewsletter")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MembershipDetailsFK")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MembershipType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MembershipDetailsFK");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("VioRentals.Core.Entities.GenreEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("VioRentals.Core.Entities.MembershipDetailsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte>("DiscountRate")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("DurationInMonths")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<short>("SignUpFee")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("MembershipTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountRate = (byte)0,
                            DurationInMonths = (byte)0,
                            Name = "PayAsYouGo",
                            SignUpFee = (short)0
                        },
                        new
                        {
                            Id = 2,
                            DiscountRate = (byte)10,
                            DurationInMonths = (byte)1,
                            Name = "Monthly",
                            SignUpFee = (short)30
                        },
                        new
                        {
                            Id = 3,
                            DiscountRate = (byte)15,
                            DurationInMonths = (byte)3,
                            Name = "Quarterly",
                            SignUpFee = (short)90
                        },
                        new
                        {
                            Id = 4,
                            DiscountRate = (byte)20,
                            DurationInMonths = (byte)12,
                            Name = "Annual",
                            SignUpFee = (short)300
                        });
                });

            modelBuilder.Entity("VioRentals.Core.Entities.MovieEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GenreFK")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<byte>("NumberAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("NumberInStock")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GenreFK");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("VioRentals.Core.Entities.RentalEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerFK")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateRented")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateReturned")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieFK")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CustomerFK");

                    b.HasIndex("MovieFK");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("VioRentals.Core.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Forename")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VioRentals.Core.Entities.CustomerEntity", b =>
                {
                    b.HasOne("VioRentals.Core.Entities.MembershipDetailsEntity", "_MembershipDetails")
                        .WithMany("_Customers")
                        .HasForeignKey("MembershipDetailsFK")
                        .IsRequired();

                    b.Navigation("_MembershipDetails");
                });

            modelBuilder.Entity("VioRentals.Core.Entities.MovieEntity", b =>
                {
                    b.HasOne("VioRentals.Core.Entities.GenreEntity", "_Genre")
                        .WithMany("_Movies")
                        .HasForeignKey("GenreFK");

                    b.Navigation("_Genre");
                });

            modelBuilder.Entity("VioRentals.Core.Entities.RentalEntity", b =>
                {
                    b.HasOne("VioRentals.Core.Entities.CustomerEntity", "_Customer")
                        .WithMany("_Rentals")
                        .HasForeignKey("CustomerFK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VioRentals.Core.Entities.MovieEntity", "_Movie")
                        .WithMany("_Rentals")
                        .HasForeignKey("MovieFK")
                        .IsRequired();

                    b.Navigation("_Customer");

                    b.Navigation("_Movie");
                });

            modelBuilder.Entity("VioRentals.Core.Entities.CustomerEntity", b =>
                {
                    b.Navigation("_Rentals");
                });

            modelBuilder.Entity("VioRentals.Core.Entities.GenreEntity", b =>
                {
                    b.Navigation("_Movies");
                });

            modelBuilder.Entity("VioRentals.Core.Entities.MembershipDetailsEntity", b =>
                {
                    b.Navigation("_Customers");
                });

            modelBuilder.Entity("VioRentals.Core.Entities.MovieEntity", b =>
                {
                    b.Navigation("_Rentals");
                });
#pragma warning restore 612, 618
        }
    }
}
